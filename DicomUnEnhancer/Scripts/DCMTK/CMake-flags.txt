cmake -LAH .../DCMTK
as of 3.6.7

// Build command line applications and test programs.
BUILD_APPS:BOOL=ON

// Build with shared libraries.
BUILD_SHARED_LIBS:BOOL=OFF

// Build a single DCMTK library.
BUILD_SINGLE_SHARED_LIBRARY:BOOL=OFF

// Path to a program.
CMAKE_ADDR2LINE:FILEPATH=CMAKE_ADDR2LINE-NOTFOUND

// Path to a program.
CMAKE_AR:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ar

// Choose the type of build.
CMAKE_BUILD_TYPE:STRING=Release

// Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

// CXX compiler
CMAKE_CXX_COMPILER:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++

// Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=

// Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

// Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

// Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

// Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

// C compiler
CMAKE_C_COMPILER:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/cc

// Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=

// Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

// Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

// Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

// Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

// Library postfix for debug builds. Usually left blank.
CMAKE_DEBUG_POSTFIX:STRING=

// Path to a program.
CMAKE_DLLTOOL:FILEPATH=CMAKE_DLLTOOL-NOTFOUND

// Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=

// Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

// Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

// Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

// Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

// Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=

// User executables (bin)
CMAKE_INSTALL_BINDIR:PATH=bin

// Read-only architecture-independent data (DATAROOTDIR)
CMAKE_INSTALL_DATADIR:PATH=

// Read-only architecture-independent data root (share)
CMAKE_INSTALL_DATAROOTDIR:PATH=share

// Documentation root (DATAROOTDIR/doc/PROJECT_NAME)
CMAKE_INSTALL_DOCDIR:PATH=

// C header files (include)
CMAKE_INSTALL_INCLUDEDIR:PATH=include

// Info documentation (DATAROOTDIR/info)
CMAKE_INSTALL_INFODIR:PATH=

// Object code libraries (lib)
CMAKE_INSTALL_LIBDIR:PATH=lib

// Program executables (libexec)
CMAKE_INSTALL_LIBEXECDIR:PATH=libexec

// Locale-dependent data (DATAROOTDIR/locale)
CMAKE_INSTALL_LOCALEDIR:PATH=

// Modifiable single-machine data (var)
CMAKE_INSTALL_LOCALSTATEDIR:PATH=var

// Man documentation (DATAROOTDIR/man)
CMAKE_INSTALL_MANDIR:PATH=

// Path to a program.
CMAKE_INSTALL_NAME_TOOL:FILEPATH=/usr/bin/install_name_tool

// C header files for non-gcc (/usr/include)
CMAKE_INSTALL_OLDINCLUDEDIR:PATH=/usr/include

// Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

// Run-time variable data (LOCALSTATEDIR/run)
CMAKE_INSTALL_RUNSTATEDIR:PATH=

// System admin executables (sbin)
CMAKE_INSTALL_SBINDIR:PATH=sbin

// Modifiable architecture-independent data (com)
CMAKE_INSTALL_SHAREDSTATEDIR:PATH=com

// Read-only single-machine data (etc)
CMAKE_INSTALL_SYSCONFDIR:PATH=etc

// Path to a program.
CMAKE_LINKER:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld

// Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=/usr/bin/make

// Flags used by the linker during the creation of modules during all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=

// Flags used by the linker during the creation of modules during DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

// Flags used by the linker during the creation of modules during MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

// Flags used by the linker during the creation of modules during RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

// Flags used by the linker during the creation of modules during RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

// Path to a program.
CMAKE_NM:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/nm

// Path to a program.
CMAKE_OBJCOPY:FILEPATH=CMAKE_OBJCOPY-NOTFOUND

// Path to a program.
CMAKE_OBJDUMP:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/objdump

// Build architectures for OSX
CMAKE_OSX_ARCHITECTURES:STRING=

// Minimum OS X version to target for deployment (at runtime); newer APIs weak linked. Set to empty string for default value.
CMAKE_OSX_DEPLOYMENT_TARGET:STRING=

// The product will be built against the headers and libraries located inside the indicated SDK.
CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk

// Path to a program.
CMAKE_RANLIB:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ranlib

// Path to a program.
CMAKE_READELF:FILEPATH=CMAKE_READELF-NOTFOUND

// Flags used by the linker during the creation of shared libraries during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=

// Flags used by the linker during the creation of shared libraries during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

// Flags used by the linker during the creation of shared libraries during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

// Flags used by the linker during the creation of shared libraries during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

// Flags used by the linker during the creation of shared libraries during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

// If set, runtime paths are not added when installing shared libraries, but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

// If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

// Flags used by the linker during the creation of static libraries during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=

// Flags used by the linker during the creation of static libraries during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

// Flags used by the linker during the creation of static libraries during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

// Flags used by the linker during the creation of static libraries during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

// Flags used by the linker during the creation of static libraries during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

// Path to a program.
CMAKE_STRIP:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/strip

// If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

// Denotes whether DCMTK will use built-in (compiled-in), external (file), or no default dictionary on startup
DCMTK_DEFAULT_DICT:STRING=external

// Select character set conversion implementation.
DCMTK_ENABLE_CHARSET_CONVERSION:STRING=libiconv

// Enable use of native C++11 features (eg. move semantics).
DCMTK_ENABLE_CXX11:STRING=INFERRED

// whether to use lfs/lfs64 or not
DCMTK_ENABLE_LFS:STRING=lfs

// Enable building/installing of manpages.
DCMTK_ENABLE_MANPAGES:BOOL=ON

// Configure DCMTK with support for DICOM private tags coming with DCMTK.
DCMTK_ENABLE_PRIVATE_TAGS:BOOL=OFF

// Enable use of native STL classes and algorithms instead of DCMTK's own implementations.
DCMTK_ENABLE_STL:BOOL=OFF

// Enable use of STL algorithm.
DCMTK_ENABLE_STL_ALGORITHM:STRING=INFERRED

// Enable use of STL limit.
DCMTK_ENABLE_STL_LIMITS:STRING=INFERRED

// Enable use of STL list.
DCMTK_ENABLE_STL_LIST:STRING=INFERRED

// Enable use of STL map.
DCMTK_ENABLE_STL_MAP:STRING=INFERRED

// Enable use of STL memory.
DCMTK_ENABLE_STL_MEMORY:STRING=INFERRED

// Enable use of STL stack.
DCMTK_ENABLE_STL_STACK:STRING=INFERRED

// Enable use of STL string.
DCMTK_ENABLE_STL_STRING:STRING=INFERRED

// Enable use of STL system_error.
DCMTK_ENABLE_STL_SYSTEM_ERROR:STRING=INFERRED

// Enable use of STL tuple.
DCMTK_ENABLE_STL_TUPLE:STRING=INFERRED

// Enable use of STL type traits.
DCMTK_ENABLE_STL_TYPE_TRAITS:STRING=INFERRED

// Enable use of STL vector.
DCMTK_ENABLE_STL_VECTOR:STRING=INFERRED

// Add -fPIC compiler flag on unix 64 bit machines to allow linking from dynamic libraries even if DCMTK is built statically
DCMTK_FORCE_FPIC_ON_UNIX:BOOL=OFF

// Generate a tag file with DOXYGEN.
DCMTK_GENERATE_DOXYGEN_TAGFILE:BOOL=OFF

// Statically link all libraries and tools with the runtime and third party libraries.
DCMTK_LINK_STATIC:BOOL=OFF

// List of modules that should be built.
DCMTK_MODULES:STRING=config;ofstd;oflog;dcmdata;dcmimgle;dcmimage;dcmjpeg;dcmjpls;dcmtls;dcmnet;dcmsr;dcmsign;dcmwlm;dcmqrdb;dcmpstat;dcmrt;dcmiod;dcmfg;dcmseg;dcmtract;dcmpmap;dcmect

// Create ELF binaries while statically linking all third party libraries and libstdc++.
DCMTK_PORTABLE_LINUX_BINARIES:BOOL=OFF

// Don't set ImageType to DERIVED when re-encoding.
DCMTK_PRESERVE_IMAGETYPE:BOOL=OFF

// Postfix for libraries that change their ABI when using OpenSSL.
DCMTK_TLS_LIBRARY_POSTFIX:STRING=

// Enable reading dictionary that is defined through DCMDICTPATH environment variable.
DCMTK_USE_DCMDICTPATH:BOOL=ON

// Control whether libraries are searched via CMake's find_package() mechanism or a Windows specific fallback
DCMTK_USE_FIND_PACKAGE:BOOL=TRUE

// Build with wide char file I/O functions.
DCMTK_WIDE_CHAR_FILE_IO_FUNCTIONS:BOOL=OFF

// Build command line tools with wide char main function.
DCMTK_WIDE_CHAR_MAIN_FUNCTION:BOOL=OFF

//
DCMTK_WITH_DOXYGEN:BOOL=OFF

// Configure DCMTK with support for ICONV.
DCMTK_WITH_ICONV:BOOL=ON

//
DCMTK_WITH_ICU:BOOL=OFF

// Configure DCMTK with support for OPENJPEG.
DCMTK_WITH_OPENJPEG:BOOL=ON

// Configure DCMTK with support for OPENSSL.
DCMTK_WITH_OPENSSL:BOOL=ON

// Configure DCMTK with support for PNG.
DCMTK_WITH_PNG:BOOL=ON

// Configure DCMTK with support for SNDFILE.
DCMTK_WITH_SNDFILE:BOOL=ON

//
DCMTK_WITH_STDLIBC_ICONV:BOOL=OFF

// Configure DCMTK with support for multi-threading.
DCMTK_WITH_THREADS:BOOL=ON

// Configure DCMTK with support for TIFF.
DCMTK_WITH_TIFF:BOOL=ON

//
DCMTK_WITH_WRAP:BOOL=OFF

// Configure DCMTK with support for XML.
DCMTK_WITH_XML:BOOL=ON

// Configure DCMTK with support for ZLIB.
DCMTK_WITH_ZLIB:BOOL=ON

// Dot tool for use with Doxygen
DOXYGEN_DOT_EXECUTABLE:FILEPATH=DOXYGEN_DOT_EXECUTABLE-NOTFOUND

// Doxygen documentation generation tool (https://www.doxygen.nl)
DOXYGEN_EXECUTABLE:FILEPATH=DOXYGEN_EXECUTABLE-NOTFOUND

// ICU data library (debug)
ICU_DATA_LIBRARY_DEBUG:FILEPATH=ICU_DATA_LIBRARY_DEBUG-NOTFOUND

// ICU data library (release)
ICU_DATA_LIBRARY_RELEASE:FILEPATH=ICU_DATA_LIBRARY_RELEASE-NOTFOUND

// ICU derb executable
ICU_DERB_EXECUTABLE:FILEPATH=ICU_DERB_EXECUTABLE-NOTFOUND

// ICU genbrk executable
ICU_GENBRK_EXECUTABLE:FILEPATH=ICU_GENBRK_EXECUTABLE-NOTFOUND

// ICU genccode executable
ICU_GENCCODE_EXECUTABLE:FILEPATH=ICU_GENCCODE_EXECUTABLE-NOTFOUND

// ICU gencfu executable
ICU_GENCFU_EXECUTABLE:FILEPATH=ICU_GENCFU_EXECUTABLE-NOTFOUND

// ICU gencmn executable
ICU_GENCMN_EXECUTABLE:FILEPATH=ICU_GENCMN_EXECUTABLE-NOTFOUND

// ICU gencnval executable
ICU_GENCNVAL_EXECUTABLE:FILEPATH=ICU_GENCNVAL_EXECUTABLE-NOTFOUND

// ICU gendict executable
ICU_GENDICT_EXECUTABLE:FILEPATH=ICU_GENDICT_EXECUTABLE-NOTFOUND

// ICU gennorm2 executable
ICU_GENNORM2_EXECUTABLE:FILEPATH=ICU_GENNORM2_EXECUTABLE-NOTFOUND

// ICU genrb executable
ICU_GENRB_EXECUTABLE:FILEPATH=ICU_GENRB_EXECUTABLE-NOTFOUND

// ICU gensprep executable
ICU_GENSPREP_EXECUTABLE:FILEPATH=ICU_GENSPREP_EXECUTABLE-NOTFOUND

// ICU icu-config executable
ICU_ICU-CONFIG_EXECUTABLE:FILEPATH=ICU_ICU-CONFIG_EXECUTABLE-NOTFOUND

// ICU icuinfo executable
ICU_ICUINFO_EXECUTABLE:FILEPATH=ICU_ICUINFO_EXECUTABLE-NOTFOUND

// ICU icupkg executable
ICU_ICUPKG_EXECUTABLE:FILEPATH=ICU_ICUPKG_EXECUTABLE-NOTFOUND

// ICU include directory
ICU_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/include

// ICU makeconv executable
ICU_MAKECONV_EXECUTABLE:FILEPATH=ICU_MAKECONV_EXECUTABLE-NOTFOUND

// ICU Makefile.inc data file
ICU_MAKEFILE_INC:FILEPATH=ICU_MAKEFILE_INC-NOTFOUND

// ICU pkgdata executable
ICU_PKGDATA_EXECUTABLE:FILEPATH=ICU_PKGDATA_EXECUTABLE-NOTFOUND

// ICU pkgdata.inc data file
ICU_PKGDATA_INC:FILEPATH=ICU_PKGDATA_INC-NOTFOUND

// ICU uconv executable
ICU_UCONV_EXECUTABLE:FILEPATH=ICU_UCONV_EXECUTABLE-NOTFOUND

// ICU uc library (debug)
ICU_UC_LIBRARY_DEBUG:FILEPATH=ICU_UC_LIBRARY_DEBUG-NOTFOUND

// ICU uc library (release)
ICU_UC_LIBRARY_RELEASE:FILEPATH=ICU_UC_LIBRARY_RELEASE-NOTFOUND

// iconv include directory
Iconv_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/include

// iconv library (if not in the C library)
Iconv_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/lib/libiconv.tbd

// Path to a file.
JPEG_INCLUDE_DIR:PATH=/Library/Frameworks/Mono.framework/Headers

// Path to a library.
JPEG_LIBRARY_DEBUG:FILEPATH=JPEG_LIBRARY_DEBUG-NOTFOUND

// Path to a library.
JPEG_LIBRARY_RELEASE:FILEPATH=/opt/homebrew/lib/libjpeg.dylib

// Path to a file.
LIBCHARSET_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/include

// Path to a library.
LIBCHARSET_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/lib/libcharset.tbd

// Path to a file.
LIBXML2_INCLUDE_DIR:PATH=/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/libxml2

// Path to a library.
LIBXML2_LIBRARY:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/lib/libxml2.tbd

// Path to a program.
LIBXML2_XMLLINT_EXECUTABLE:FILEPATH=/usr/bin/xmllint

// Path to a library.
OPENSSL_CRYPTO_LIBRARY:FILEPATH=/opt/homebrew/Cellar/openssl@3/3.1.1_1/lib/libcrypto.dylib

// Path to a file.
OPENSSL_INCLUDE_DIR:PATH=/opt/homebrew/Cellar/openssl@3/3.1.1_1/include

// Path to a library.
OPENSSL_SSL_LIBRARY:FILEPATH=/opt/homebrew/Cellar/openssl@3/3.1.1_1/lib/libssl.dylib

// The directory containing a CMake configuration file for OpenJPEG.
OpenJPEG_DIR:PATH=/opt/homebrew/lib/openjpeg-2.5

// Arguments to supply to pkg-config
PKG_CONFIG_ARGN:STRING=

// pkg-config executable
PKG_CONFIG_EXECUTABLE:FILEPATH=/opt/homebrew/bin/pkg-config

// Path to a library.
PNG_LIBRARY_DEBUG:FILEPATH=PNG_LIBRARY_DEBUG-NOTFOUND

// Path to a library.
PNG_LIBRARY_RELEASE:FILEPATH=/opt/homebrew/lib/libpng.dylib

// Path to a file.
PNG_PNG_INCLUDE_DIR:PATH=/Library/Frameworks/Mono.framework/Headers

// Path to a file.
SNDFILE_INCLUDE_DIR:PATH=/opt/homebrew/include

// Path to a library.
SNDFILE_LIBRARY:FILEPATH=/opt/homebrew/lib/libsndfile.dylib

// Path to a file.
TIFF_INCLUDE_DIR:PATH=/Library/Frameworks/Mono.framework/Headers

// Path to a library.
TIFF_LIBRARY_DEBUG:FILEPATH=TIFF_LIBRARY_DEBUG-NOTFOUND

// Path to a library.
TIFF_LIBRARY_RELEASE:FILEPATH=/opt/homebrew/lib/libtiff.dylib

// Path to a file.
WRAP_INCLUDE_DIR:PATH=WRAP_INCLUDE_DIR-NOTFOUND

// Path to a library.
WRAP_LIBRARY:FILEPATH=WRAP_LIBRARY-NOTFOUND

// Path to a file.
ZLIB_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/include

// Path to a library.
ZLIB_LIBRARY_DEBUG:FILEPATH=ZLIB_LIBRARY_DEBUG-NOTFOUND

// Path to a library.
ZLIB_LIBRARY_RELEASE:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/lib/libz.tbd

// Path to a library.
pkgcfg_lib_PC_LIBXML_xml2:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/lib/libxml2.tbd

// Path to a library.
pkgcfg_lib__OPENSSL_crypto:FILEPATH=/opt/homebrew/Cellar/openssl@3/3.1.1_1/lib/libcrypto.dylib

// Path to a library.
pkgcfg_lib__OPENSSL_ssl:FILEPATH=/opt/homebrew/Cellar/openssl@3/3.1.1_1/lib/libssl.dylib
